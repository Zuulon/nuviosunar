import { MessageApplicationCommandData, UserApplicationCommandData, Awaitable, ApplicationCommandType, MessageContextMenuCommandInteraction, UserContextMenuCommandInteraction, ContextMenuCommandInteraction } from 'discord.js';
import { B as Builder, a as Protector } from '../builder-C6J45hMw.cjs';
import { CommandConfig } from '../types/config.cjs';
import '../client-CcTd37MH.cjs';
import { Builders } from '../utils/enums.cjs';
import '../utils/constants.cjs';
import '../types/utils.cjs';

type ContextMenuData = MessageApplicationCommandData | UserApplicationCommandData;
interface ContextMenuConfig extends CommandConfig {
}
/**
 * Context menu commands are available directly in the right-click context menu for users or messages. These commands are convenient for quick actions without needing to type a command.
 *
 * @see https://sunar.js.org/docs/builders/context-menu
 */
declare class ContextMenu<TData extends ContextMenuData = ContextMenuData> implements Builder {
    readonly type = Builders.ContextMenu;
    readonly data: TData;
    config: ContextMenuConfig;
    protectors: Protector<{
        commands: 'contextMenu'[];
    }>[];
    execute: (...args: ContextMenuArgs<TData>) => Awaitable<unknown>;
    constructor(data: TData);
}
type ContextMenuArgs<TData extends ContextMenuData> = [
    interaction: TData['type'] extends ApplicationCommandType.Message ? MessageContextMenuCommandInteraction : TData['type'] extends ApplicationCommandType.User ? UserContextMenuCommandInteraction : ContextMenuCommandInteraction
];

export { ContextMenu, type ContextMenuArgs, type ContextMenuConfig, type ContextMenuData };
