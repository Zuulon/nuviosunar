import { AutocompleteInteraction, AutocompleteFocusedOption, Awaitable } from 'discord.js';
import { B as Builder, a as Protector } from '../builder-C6J45hMw.cjs';
import '../client-CcTd37MH.cjs';
import { Builders } from '../utils/enums.cjs';
import '../utils/constants.cjs';
import '../types/utils.cjs';

interface AutocompleteOptions {
    /** The name of the command option that has autocomplete enabled. */
    name: string | RegExp;
    /** Filters the autocomplete execution by the command name. */
    commandName?: string | RegExp;
}
/**
 * Autocomplete commands enhance the user experience by providing suggestions while the user is typing. They are particularly useful for commands with multiple options or extensive inputs.
 *
 * @see https://sunar.js.org/docs/builders/autocomplete
 */
declare class Autocomplete implements Omit<Builder, 'config'> {
    readonly type = Builders.Autocomplete;
    readonly options: AutocompleteOptions;
    protectors: Protector<{
        commands: 'autocomplete'[];
    }>[];
    execute: (interaction: AutocompleteInteraction, option: AutocompleteFocusedOption) => Awaitable<unknown>;
    constructor(options: AutocompleteOptions);
}

export { Autocomplete, type AutocompleteOptions };
