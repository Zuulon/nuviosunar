import { ButtonInteraction, Awaitable } from 'discord.js';
import { B as Builder, a as Protector } from '../builder-C6J45hMw.cjs';
import { a as CooldownResolvable } from '../client-CcTd37MH.cjs';
import { Builders } from '../utils/enums.cjs';
import '../utils/constants.cjs';
import '../types/utils.cjs';

interface ButtonOptions {
    /** The button custom ID to target. */
    id: string | RegExp;
}
interface ButtonConfig {
    cooldown?: CooldownResolvable;
}
/**
 * Buttons are interactive elements users can click to trigger specific actions. They are ideal for creating interactive messages, such as confirmation prompts or menu navigation.
 *
 * @see https://sunar.js.org/docs/builders/button
 */
declare class Button implements Builder {
    readonly type = Builders.Button;
    readonly options: ButtonOptions;
    config: ButtonConfig;
    protectors: Protector<{
        components: 'button'[];
    }>[];
    execute: (interaction: ButtonInteraction) => Awaitable<unknown>;
    constructor(options: ButtonOptions);
}

export { Button, type ButtonConfig, type ButtonOptions };
