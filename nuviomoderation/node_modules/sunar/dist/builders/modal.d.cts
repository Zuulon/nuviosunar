import { ModalSubmitInteraction, Awaitable } from 'discord.js';
import { B as Builder, a as Protector } from '../builder-C6J45hMw.cjs';
import { a as CooldownResolvable } from '../client-CcTd37MH.cjs';
import { Builders } from '../utils/enums.cjs';
import '../utils/constants.cjs';
import '../types/utils.cjs';

interface ModalOptions {
    /** The modal custom ID to target. */
    id: string | RegExp;
}
interface ModalConfig {
    cooldown?: CooldownResolvable;
}
/**
 * Modals are popup forms that can collect detailed user input. They are particularly useful for complex interactions that require multiple fields or steps.
 *
 * @see https://sunar.js.org/docs/builders/modal
 */
declare class Modal implements Builder {
    readonly type = Builders.Modal;
    readonly options: ModalOptions;
    config: ModalConfig;
    protectors: Protector<{
        components: 'modal'[];
    }>[];
    execute: (interaction: ModalSubmitInteraction) => Awaitable<unknown>;
    constructor(options: ModalOptions);
}

export { Modal, type ModalConfig, type ModalOptions };
