{"version":3,"sources":["../../src/builders/modal.ts"],"names":[],"mappings":";;;;AAqBO,IAAM,QAAN,MAA+B;AAAA,EArBtC;AAqBsC,IAAA,MAAA,CAAA,IAAA,EAAA,OAAA,CAAA,CAAA;AAAA,GAAA;AAAA,EACrB,OAAO,QAAS,CAAA,KAAA,CAAA;AAAA,EAChB,OAAA,CAAA;AAAA,EAET,SAAsB,EAAC,CAAA;AAAA,EACvB,aAAqD,EAAC,CAAA;AAAA,EACtD,OAAA,gCAA6E,gBAAN,EAAA,SAAA,CAAA,CAAA;AAAA,EAE9E,YAAY,OAAuB,EAAA;AAClC,IAAA,IAAA,CAAK,OAAU,GAAA,OAAA,CAAA;AAAA,GAChB;AACD","file":"modal.js","sourcesContent":["import type { Awaitable, ModalSubmitInteraction } from 'discord.js';\n\nimport type { Protector } from '.';\nimport { UNHANDLED_SYMBOL } from '../symbols';\nimport type { Builder, CooldownResolvable } from '../types';\nimport { Builders } from '../utils';\n\nexport interface ModalOptions {\n\t/** The modal custom ID to target. */\n\tid: string | RegExp;\n}\n\nexport interface ModalConfig {\n\tcooldown?: CooldownResolvable;\n}\n\n/**\n * Modals are popup forms that can collect detailed user input. They are particularly useful for complex interactions that require multiple fields or steps.\n *\n * @see https://sunar.js.org/docs/builders/modal\n */\nexport class Modal implements Builder {\n\tpublic readonly type = Builders.Modal;\n\tpublic readonly options: ModalOptions;\n\n\tpublic config: ModalConfig = {};\n\tpublic protectors: Protector<{ components: 'modal'[] }>[] = [];\n\tpublic execute: (interaction: ModalSubmitInteraction) => Awaitable<unknown> = () => UNHANDLED_SYMBOL;\n\n\tconstructor(options: ModalOptions) {\n\t\tthis.options = options;\n\t}\n}\n"]}