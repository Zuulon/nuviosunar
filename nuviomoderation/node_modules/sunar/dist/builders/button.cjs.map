{"version":3,"sources":["../../src/builders/button.ts"],"names":["Builders","UNHANDLED_SYMBOL"],"mappings":";;;;;;;AAqBO,IAAM,SAAN,MAAgC;AAAA,EArBvC;AAqBuC,IAAA,MAAA,CAAA,IAAA,EAAA,QAAA,CAAA,CAAA;AAAA,GAAA;AAAA,EACtB,OAAOA,kBAAS,CAAA,MAAA,CAAA;AAAA,EAChB,OAAA,CAAA;AAAA,EAET,SAAuB,EAAC,CAAA;AAAA,EACxB,aAAsD,EAAC,CAAA;AAAA,EACvD,OAAA,gCAAwEC,4BAAN,EAAA,SAAA,CAAA,CAAA;AAAA,EAEzE,YAAY,OAAwB,EAAA;AACnC,IAAA,IAAA,CAAK,OAAU,GAAA,OAAA,CAAA;AAAA,GAChB;AACD","file":"button.cjs","sourcesContent":["import type { Awaitable, ButtonInteraction } from 'discord.js';\n\nimport type { Protector } from '.';\nimport { UNHANDLED_SYMBOL } from '../symbols';\nimport type { Builder, CooldownResolvable } from '../types';\nimport { Builders } from '../utils';\n\nexport interface ButtonOptions {\n\t/** The button custom ID to target. */\n\tid: string | RegExp;\n}\n\nexport interface ButtonConfig {\n\tcooldown?: CooldownResolvable;\n}\n\n/**\n * Buttons are interactive elements users can click to trigger specific actions. They are ideal for creating interactive messages, such as confirmation prompts or menu navigation.\n *\n * @see https://sunar.js.org/docs/builders/button\n */\nexport class Button implements Builder {\n\tpublic readonly type = Builders.Button;\n\tpublic readonly options: ButtonOptions;\n\n\tpublic config: ButtonConfig = {};\n\tpublic protectors: Protector<{ components: 'button'[] }>[] = [];\n\tpublic execute: (interaction: ButtonInteraction) => Awaitable<unknown> = () => UNHANDLED_SYMBOL;\n\n\tconstructor(options: ButtonOptions) {\n\t\tthis.options = options;\n\t}\n}\n"]}