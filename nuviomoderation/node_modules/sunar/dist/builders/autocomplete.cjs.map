{"version":3,"sources":["../../src/builders/autocomplete.ts"],"names":["Builders","UNHANDLED_SYMBOL"],"mappings":";;;;;;;AAmBO,IAAM,eAAN,MAAsD;AAAA,EAnB7D;AAmB6D,IAAA,MAAA,CAAA,IAAA,EAAA,cAAA,CAAA,CAAA;AAAA,GAAA;AAAA,EAC5C,OAAOA,kBAAS,CAAA,YAAA,CAAA;AAAA,EAChB,OAAA,CAAA;AAAA,EAET,aAA0D,EAAC,CAAA;AAAA,EAC3D,OAAA,gCACAC,4BAAN,EAAA,SAAA,CAAA,CAAA;AAAA,EAED,YAAY,OAA8B,EAAA;AACzC,IAAA,IAAA,CAAK,OAAU,GAAA,OAAA,CAAA;AAAA,GAChB;AACD","file":"autocomplete.cjs","sourcesContent":["import type { AutocompleteFocusedOption, AutocompleteInteraction, Awaitable } from 'discord.js';\n\nimport type { Protector } from '.';\nimport { UNHANDLED_SYMBOL } from '../symbols';\nimport type { Builder } from '../types';\nimport { Builders } from '../utils';\n\nexport interface AutocompleteOptions {\n\t/** The name of the command option that has autocomplete enabled. */\n\tname: string | RegExp;\n\t/** Filters the autocomplete execution by the command name. */\n\tcommandName?: string | RegExp;\n}\n\n/**\n * Autocomplete commands enhance the user experience by providing suggestions while the user is typing. They are particularly useful for commands with multiple options or extensive inputs.\n *\n * @see https://sunar.js.org/docs/builders/autocomplete\n */\nexport class Autocomplete implements Omit<Builder, 'config'> {\n\tpublic readonly type = Builders.Autocomplete;\n\tpublic readonly options: AutocompleteOptions;\n\n\tpublic protectors: Protector<{ commands: 'autocomplete'[] }>[] = [];\n\tpublic execute: (interaction: AutocompleteInteraction, option: AutocompleteFocusedOption) => Awaitable<unknown> =\n\t\t() => UNHANDLED_SYMBOL;\n\n\tconstructor(options: AutocompleteOptions) {\n\t\tthis.options = options;\n\t}\n}\n"]}