{"version":3,"sources":["../../../src/utils/resolveCooldown/resolveCooldown.ts"],"names":[],"mappings":";;;AAGO,SAAS,gBAAgB,QAAgF,EAAA;AAC/G,EAAM,MAAA,QAAA,GAAW,OAAO,QAAa,KAAA,QAAA,CAAA;AACrC,EAAA,MAAM,aAAgB,GAAA,CAAC,QAAY,IAAA,QAAA,CAAS,UAAU,aAAc,CAAA,MAAA,CAAA;AAEpE,EAAI,IAAA,IAAA,CAAA;AAEJ,EAAA,IAAI,QAAQ,aAAc,CAAA,IAAA,CAAA;AAC1B,EAAA,IAAI,KAAQ,GAAA,CAAA,CAAA;AAEZ,EAAA,IAAI,UAAoB,EAAC,CAAA;AAEzB,EAAA,IAAI,QAAU,EAAA;AACb,IAAO,IAAA,GAAA,QAAA,CAAA;AAAA,GACD,MAAA;AACN,IAAI,IAAA,QAAA,CAAS,KAAO,EAAA,KAAA,GAAQ,QAAS,CAAA,KAAA,CAAA;AACrC,IAAI,IAAA,QAAA,CAAS,KAAO,EAAA,KAAA,GAAQ,QAAS,CAAA,KAAA,CAAA;AACrC,IAAA,IAAA,GAAO,QAAS,CAAA,IAAA,CAAA;AAEhB,IAAA,IAAI,CAAC,aAAe,EAAA;AACnB,MAAU,OAAA,GAAA,QAAA,CAAS,WAAW,EAAC,CAAA;AAAA,KAChC;AAAA,GACD;AAEA,EAAA,OAAO,EAAE,IAAA,EAAM,KAAO,EAAA,KAAA,EAAO,OAAQ,EAAA,CAAA;AACtC,CAAA;AAxBgB,MAAA,CAAA,eAAA,EAAA,iBAAA,CAAA","file":"resolveCooldown.js","sourcesContent":["import { CooldownScope } from '../..';\nimport type { CooldownConfig, CooldownResolvable } from '../../types';\n\nexport function resolveCooldown(cooldown: CooldownResolvable): Required<CooldownConfig> & { exclude: string[] } {\n\tconst isNumber = typeof cooldown === 'number';\n\tconst isGlobalScope = !isNumber && cooldown.scope === CooldownScope.Global;\n\n\tlet time: number;\n\n\tlet scope = CooldownScope.User;\n\tlet limit = 1;\n\n\tlet exclude: string[] = [];\n\n\tif (isNumber) {\n\t\ttime = cooldown;\n\t} else {\n\t\tif (cooldown.scope) scope = cooldown.scope;\n\t\tif (cooldown.limit) limit = cooldown.limit;\n\t\ttime = cooldown.time;\n\n\t\tif (!isGlobalScope) {\n\t\t\texclude = cooldown.exclude ?? [];\n\t\t}\n\t}\n\n\treturn { time, limit, scope, exclude };\n}\n"]}