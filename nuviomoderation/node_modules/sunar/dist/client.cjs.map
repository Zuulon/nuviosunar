{"version":3,"sources":["../src/client.ts"],"names":["DClient","context","handleSignals"],"mappings":";;;;;;;;AAMa,IAAA,MAAA,GAAN,cAAsDA,iBAAe,CAAA;AAAA,EAN5E;AAM4E,IAAA,MAAA,CAAA,IAAA,EAAA,QAAA,CAAA,CAAA;AAAA,GAAA;AAAA,EACpE,YAAY,OAAwB,EAAA;AAC1C,IAAA,KAAA,CAAM,OAAO,CAAA,CAAA;AAEb,IAAAC,iBAAA,CAAQ,MAAS,GAAA,IAAA,CAAA;AAAA,GAClB;AAAA,EAEgB,MAAM,KAAiC,EAAA;AACtD,IAAcC,yBAAA,EAAA,CAAA;AACd,IAAO,OAAA,KAAA,CAAM,MAAM,KAAK,CAAA,CAAA;AAAA,GACzB;AACD","file":"client.cjs","sourcesContent":["import { type ClientOptions, Client as DClient } from 'discord.js';\n\nimport { handleSignals } from './handlers';\nimport { context } from './stores';\nimport type { SunarSignals } from './types';\n\nexport class Client<Ready extends boolean = boolean> extends DClient<Ready> {\n\tpublic constructor(options: ClientOptions) {\n\t\tsuper(options);\n\n\t\tcontext.client = this;\n\t}\n\n\tpublic override login(token?: string): Promise<string> {\n\t\thandleSignals();\n\t\treturn super.login(token);\n\t}\n}\n\ndeclare module 'discord.js' {\n\tinterface ClientEvents extends SunarSignals {}\n}\n"]}