import { __name } from '../../chunk-7QVYU63E.js';
import { autocompletes } from '../../stores/index.js';
import { handleProtectors } from '../protectors/index.js';

async function handleAutocomplete(interaction) {
  const focused = interaction.options.getFocused(true);
  const command = autocompletes.find(({ options }) => {
    if (options.name instanceof RegExp) return options.name.test(focused.name);
    if (options.commandName instanceof RegExp) return options.commandName.test(interaction.commandName);
    if (options.commandName && options.commandName !== interaction.commandName) return false;
    return options.name === focused.name;
  });
  if (!command) return;
  if (typeof command.execute !== "function") return;
  const canContinue = await handleProtectors({ protectors: command.protectors, data: interaction });
  if (!canContinue) return;
  const result = await command.execute(interaction, focused);
  if (!result) return;
}
__name(handleAutocomplete, "handleAutocomplete");

export { handleAutocomplete };
//# sourceMappingURL=autocomplete.js.map
//# sourceMappingURL=autocomplete.js.map