{"version":3,"sources":["../../../src/handlers/autocomplete/autocomplete.ts"],"names":[],"mappings":";;;;AAUA,eAAsB,mBAAmB,WAAsC,EAAA;AAC9E,EAAA,MAAM,OAAU,GAAA,WAAA,CAAY,OAAQ,CAAA,UAAA,CAAW,IAAI,CAAA,CAAA;AAEnD,EAAA,MAAM,UAAU,aAAc,CAAA,IAAA,CAAK,CAAC,EAAE,SAAc,KAAA;AACnD,IAAI,IAAA,OAAA,CAAQ,gBAAgB,MAAQ,EAAA,OAAO,QAAQ,IAAK,CAAA,IAAA,CAAK,QAAQ,IAAI,CAAA,CAAA;AACzE,IAAI,IAAA,OAAA,CAAQ,uBAAuB,MAAQ,EAAA,OAAO,QAAQ,WAAY,CAAA,IAAA,CAAK,YAAY,WAAW,CAAA,CAAA;AAClG,IAAA,IAAI,QAAQ,WAAe,IAAA,OAAA,CAAQ,WAAgB,KAAA,WAAA,CAAY,aAAoB,OAAA,KAAA,CAAA;AACnF,IAAO,OAAA,OAAA,CAAQ,SAAS,OAAQ,CAAA,IAAA,CAAA;AAAA,GAChC,CAAA,CAAA;AAED,EAAA,IAAI,CAAC,OAAS,EAAA,OAAA;AAEd,EAAI,IAAA,OAAO,OAAQ,CAAA,OAAA,KAAY,UAAY,EAAA,OAAA;AAE3C,EAAM,MAAA,WAAA,GAAc,MAAM,gBAAiB,CAAA,EAAE,YAAY,OAAQ,CAAA,UAAA,EAAY,IAAM,EAAA,WAAA,EAAa,CAAA,CAAA;AAChG,EAAA,IAAI,CAAC,WAAa,EAAA,OAAA;AAElB,EAAA,MAAM,MAAS,GAAA,MAAM,OAAQ,CAAA,OAAA,CAAQ,aAAa,OAAO,CAAA,CAAA;AAEzD,EAAA,IAAI,CAAC,MAAQ,EAAA,OAAA;AAGd,CAAA;AAtBsB,MAAA,CAAA,kBAAA,EAAA,oBAAA,CAAA","file":"autocomplete.js","sourcesContent":["import type { AutocompleteInteraction } from 'discord.js';\nimport { autocompletes } from '../../stores';\nimport { handleProtectors } from '../protectors';\n\n/**\n * Handle an autocomplete interaction.\n * @param interaction The autocomplete interaction to handle\n *\n * @see https://sunar.js.org/docs/guides/interactions-handling\n */\nexport async function handleAutocomplete(interaction: AutocompleteInteraction) {\n\tconst focused = interaction.options.getFocused(true);\n\n\tconst command = autocompletes.find(({ options }) => {\n\t\tif (options.name instanceof RegExp) return options.name.test(focused.name);\n\t\tif (options.commandName instanceof RegExp) return options.commandName.test(interaction.commandName);\n\t\tif (options.commandName && options.commandName !== interaction.commandName) return false;\n\t\treturn options.name === focused.name;\n\t});\n\n\tif (!command) return;\n\n\tif (typeof command.execute !== 'function') return;\n\n\tconst canContinue = await handleProtectors({ protectors: command.protectors, data: interaction });\n\tif (!canContinue) return;\n\n\tconst result = await command.execute(interaction, focused);\n\n\tif (!result) return;\n\n\t// TODO: handle the result of the command execution\n}\n"]}