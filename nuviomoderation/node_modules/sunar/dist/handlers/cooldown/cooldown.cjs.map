{"version":3,"sources":["../../../src/handlers/cooldown/cooldown.ts"],"names":["resolveCooldown","CooldownScope","cooldownManager","Collection","context","timer"],"mappings":"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","file":"cooldown.cjs","sourcesContent":["import { Collection, type Interaction, type RepliableInteraction } from 'discord.js';\n\nimport { context, cooldownManager } from '../../stores';\nimport type { Builder, CooldownResolvable, CooldownTimestamp } from '../../types';\nimport { CooldownScope, resolveCooldown } from '../../utils';\n\nexport function handleCooldown<\n\tTInteraction extends RepliableInteraction,\n\tTBuilder extends Builder & { config: { cooldown?: CooldownResolvable } },\n>(interaction: TInteraction, builder: TBuilder): boolean {\n\tif (!builder.config.cooldown) return false;\n\tif (!interaction.isRepliable()) return false;\n\n\tconst config = resolveCooldown(builder.config.cooldown);\n\n\tconst { scope } = config;\n\n\tconst isUser = scope === CooldownScope.User;\n\tconst isChannel = scope === CooldownScope.Channel;\n\tconst isGuild = scope === CooldownScope.Guild;\n\tconst isGlobal = scope === CooldownScope.Global;\n\n\tconst targetId = isUser\n\t\t? interaction.user.id\n\t\t: isChannel\n\t\t\t? interaction.channelId\n\t\t\t: isGuild\n\t\t\t\t? interaction.guildId\n\t\t\t\t: isGlobal\n\t\t\t\t\t? Symbol()\n\t\t\t\t\t: null;\n\n\tif (targetId === null) return false;\n\n\tif (!isGlobal && config.exclude.includes(targetId as string)) return false;\n\n\tconst scopes = cooldownManager.ensure(builder.type, () => new Collection());\n\n\tconst interactionId = getInteractionId(interaction);\n\tif (!interactionId) return false;\n\n\tconst cooldowns = scopes.ensure(scope, () => new Collection([[interactionId, []]]));\n\tconst timestamps = cooldowns.ensure(interactionId, () => []);\n\n\tconst targetTimestamps = timestamps.filter((c) =>\n\t\ttypeof c.targetId === 'symbol' ? c.targetId === targetId : c.targetId.startsWith(String(targetId)),\n\t);\n\n\tif (!targetTimestamps || targetTimestamps.length < config.limit) {\n\t\taddCooldown(targetId, config.time, interactionId, cooldowns, timestamps, targetTimestamps);\n\t\treturn false;\n\t}\n\n\tconst lastTimestamp = targetTimestamps.at(-1);\n\tif (!lastTimestamp) return false;\n\n\tconst remaining = config.time - (Date.now() - lastTimestamp.expiration);\n\n\tcontext.client.emit('cooldown', interaction, { remaining, scope, limit: config.limit });\n\n\treturn true;\n}\n\nfunction addCooldown(\n\ttargetId: string | symbol,\n\ttime: number,\n\tinteractionId: string,\n\tcooldownManager: Collection<string, CooldownTimestamp[]>,\n\tcurrentTimestamps: CooldownTimestamp[],\n\ttargetTimestamps: CooldownTimestamp[],\n) {\n\tconst timer = setTimeout(() => {\n\t\tcooldownManager.sweep((t) => t.some((c) => c.targetId === uniqueId));\n\t}, time);\n\n\tconst uniqueId = `${String(targetId)}-${Date.now().toString(36)}`;\n\tconst newTimestamp: CooldownTimestamp = { targetId: uniqueId, expiration: Date.now(), timer };\n\n\tcooldownManager.set(interactionId, currentTimestamps ? [...currentTimestamps, newTimestamp] : [newTimestamp]);\n\n\tfor (const { timer } of targetTimestamps) {\n\t\ttimer.refresh();\n\t}\n}\n\nfunction getInteractionId(interaction: Interaction): string | null {\n\tif (interaction.isCommand()) return interaction.commandId;\n\tif (interaction.isMessageComponent()) return interaction.customId;\n\treturn null;\n}\n"]}