import { __name } from '../../chunk-7QVYU63E.js';
import { groups } from '../../stores/index.js';
import { getGroupStoreKey } from '../../utils/index.js';
import { handleCooldown } from '../cooldown/index.js';
import { handleProtectors } from '../protectors/index.js';

async function handleSubcommands(command, interaction, { parent, sub }) {
  const root = interaction.commandName;
  const groupStoreKey = getGroupStoreKey(root, parent, sub);
  const group = groups.get(groupStoreKey);
  if (!group) return;
  const cooldownBuilder = group.config.cooldown ? group : command;
  const onCooldown = handleCooldown(interaction, cooldownBuilder);
  if (onCooldown) return;
  const protectors = command.protectors.concat(group.protectors);
  const canContinue = await handleProtectors({ protectors, data: interaction });
  if (!canContinue) return;
  typeof group.execute !== "function" && console.log("execute not function");
  if (typeof group.execute !== "function") return;
  const result = await group.execute(interaction);
  if (!result) return;
}
__name(handleSubcommands, "handleSubcommands");

export { handleSubcommands };
//# sourceMappingURL=group.js.map
//# sourceMappingURL=group.js.map