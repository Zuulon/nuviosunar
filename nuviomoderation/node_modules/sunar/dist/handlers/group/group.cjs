'use strict';

var index_cjs$1 = require('../../stores/index.cjs');
var index_cjs = require('../../utils/index.cjs');
var index_cjs$2 = require('../cooldown/index.cjs');
var index_cjs$3 = require('../protectors/index.cjs');

var __defProp = Object.defineProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
async function handleSubcommands(command, interaction, { parent, sub }) {
  const root = interaction.commandName;
  const groupStoreKey = index_cjs.getGroupStoreKey(root, parent, sub);
  const group = index_cjs$1.groups.get(groupStoreKey);
  if (!group) return;
  const cooldownBuilder = group.config.cooldown ? group : command;
  const onCooldown = index_cjs$2.handleCooldown(interaction, cooldownBuilder);
  if (onCooldown) return;
  const protectors = command.protectors.concat(group.protectors);
  const canContinue = await index_cjs$3.handleProtectors({ protectors, data: interaction });
  if (!canContinue) return;
  typeof group.execute !== "function" && console.log("execute not function");
  if (typeof group.execute !== "function") return;
  const result = await group.execute(interaction);
  if (!result) return;
}
__name(handleSubcommands, "handleSubcommands");

exports.handleSubcommands = handleSubcommands;
//# sourceMappingURL=group.cjs.map
//# sourceMappingURL=group.cjs.map