{"version":3,"sources":["../../../src/registry/global/global.ts"],"names":[],"mappings":";;;AAYO,SAAS,uBACf,WACkD,EAAA;AAClD,EAAA,MAAM,sBAAsB,sBAAuB,EAAA,CAAA;AAEnD,EAAO,OAAA,WAAA,CAAY,SAAS,GAAI,CAAA,mBAAA,CAAoB,SAAS,CAAI,GAAA,mBAAA,GAAsB,EAAE,CAAA,CAAA;AAC1F,CAAA;AANgB,MAAA,CAAA,sBAAA,EAAA,wBAAA,CAAA","file":"global.js","sourcesContent":["import type { ApplicationCommand, ClientApplication, Collection } from 'discord.js';\n\nimport { getApplicationCommands } from '../../utils';\n\n/**\n * Register all commands as global.\n *\n * @param application The client application where the commands will be registered.\n * @returns A registered application commands collection\n *\n * @see https://sunar.js.org/docs/guides/registering-commands/global\n */\nexport function registerGlobalCommands(\n\tapplication: ClientApplication,\n): Promise<Collection<string, ApplicationCommand>> {\n\tconst applicationCommands = getApplicationCommands();\n\n\treturn application.commands.set(applicationCommands.length > 0 ? applicationCommands : []);\n}\n"]}