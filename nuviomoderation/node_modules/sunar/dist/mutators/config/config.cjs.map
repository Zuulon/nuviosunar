{"version":3,"sources":["../../../src/mutators/config/config.ts"],"names":["config","isObject"],"mappings":";;;;;;AAeO,SAAS,MAAA,CAA6C,SAAmBA,OAAkC,EAAA;AACjH,EAAI,IAAA,CAACC,kBAASD,CAAAA,OAAM,CAAG,EAAA,OAAA;AACvB,EAAA,OAAA,CAAQ,MAASA,GAAAA,OAAAA,CAAAA;AAClB,CAAA;AAHgB,MAAA,CAAA,MAAA,EAAA,QAAA,CAAA","file":"config.cjs","sourcesContent":["import type { Builder } from '../../types';\nimport { isObject } from '../../utils';\n\nexport type ConfigurableBuilder = Pick<Builder, 'type' | 'config'>;\n\n/**\n * Applies the specified configuration to a builder.\n *\n * @param builder The builder to mutate\n * @param config The configuration to apply\n *\n * @see https://sunar.js.org/docs/mutators/config\n * @see https://sunar.js.org/docs/guides/implementing-cooldowns\n * @see https://sunar.js.org/docs/guides/registering-commands/dynamic#specific-guilds-ids-commands\n */\nexport function config<TBuilder extends ConfigurableBuilder>(builder: TBuilder, config: TBuilder['config']): void {\n\tif (!isObject(config)) return;\n\tbuilder.config = config;\n}\n"]}