import { B as Builder, a as Protector } from '../../builder-C6J45hMw.cjs';
import '../../client-CcTd37MH.cjs';
import 'discord.js';
import '../../utils/constants.cjs';
import '../../utils/enums.cjs';
import '../../types/utils.cjs';

type ProtectableBuilder = Pick<Builder, 'type' | 'protectors'>;
/**
 * Add a middleware to a builder.
 *
 * @param builder The builder to mutate
 * @param protectors An array of protectors that will be added to the builder
 * @returns The new protectors array
 *
 * @see https://sunar.js.org/docs/mutators/protect
 * @see https://sunar.js.org/docs/guides/middlewares#create-the-protector-logic
 * @see https://sunar.js.org/docs/guides/middlewares#create-a-protected-command
 */
declare function protect<TBuilder extends ProtectableBuilder>(builder: TBuilder, protectors: Protector[]): Protector[];

export { type ProtectableBuilder, protect };
