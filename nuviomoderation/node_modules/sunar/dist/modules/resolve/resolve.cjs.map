{"version":3,"sources":["../../../src/modules/resolve/resolve.ts"],"names":["glob","path","join"],"mappings":";;;;;;;AASA,eAAsB,OAAQ,CAAA,QAAA,EAA6B,OAAuB,GAAA,EAAoB,EAAA;AACrG,EAAA,MAAM,KAAQ,GAAA,MAAMA,SAAK,CAAA,QAAA,EAAU,OAAO,CAAA,CAAA;AAE1C,EAAA,MAAM,OAAU,GAAA,KAAA,CAAM,GAAI,CAAA,CAACC,MAAS,KAAA;AACnC,IAAA,MAAM,WAAWC,SAAK,CAAA,OAAA,CAAQ,KAAO,EAAAD,MAAA,CAAK,UAAU,CAAA,CAAA;AACpD,IAAO,OAAA,OAAO,UAAU,QAAQ,CAAA,CAAA,CAAA,CAAA;AAAA,GAChC,CAAA,CAAA;AAED,EAAO,OAAA,OAAA,CAAQ,IAAI,OAAO,CAAA,CAAA;AAC3B,CAAA;AATsB,MAAA,CAAA,OAAA,EAAA,SAAA,CAAA","file":"resolve.cjs","sourcesContent":["import { join } from 'node:path';\n\nimport { type GlobOptions, glob } from 'glob';\n\n/**\n * Import all files that match the patterns.\n * @param patterns The glob patterns to resolve\n * @param options The glob options\n */\nexport async function resolve(patterns: string | string[], options: GlobOptions = {}): Promise<any[]> {\n\tconst paths = await glob(patterns, options);\n\n\tconst imports = paths.map((path) => {\n\t\tconst absolute = join(process.cwd(), path.toString());\n\t\treturn import(`file://${absolute}`);\n\t});\n\n\treturn Promise.all(imports);\n}\n"]}